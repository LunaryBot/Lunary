generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model Guild {
  id                  String             @id @unique
  features            BigInt?
  message_kit_id      String?
  premium_type        GuildPremiumType?
  premium_until       DateTime?
  permissions         GuildPermissions[]
  reasons             Reason[]
  log_channels        GuildLogChannel[]
}

model GuildLogChannel {
  channel_id  String
  guild_id    String

  type        LogType

  message     Json

  guild       Guild @relation(fields: [guild_id], references: [id])

  @@id([guild_id, channel_id, type])
}

model GuildPermissions {
  id          String
  type        GuildPermissionType
  guild_id    String
  permissions BigInt
  guild       Guild               @relation(fields: [guild_id], references: [id])

  @@id([guild_id, id])
}

model Punishment {
  id         Int            @id @unique @default(autoincrement())
  guild_id   String
  users      String[]
  author_id  String
  created_at DateTime
  expires_at DateTime?
  flags      BigInt         @default(0)
  duration   Int?
  reason     String?
  closed     Boolean       @default(false)
  type       PunishmentType
}

model Reason {
  id       String           @default(cuid()) @id @unique
  guild_id String
  text     String
  keys     String[]         @default([])
  duration Int?
  days     Int?
  types    PunishmentType[]
  guild    Guild?           @relation(fields: [guild_id], references: [id])
}

model User {
  id            String           @id @unique
  features      BigInt           @default(0)
  premium_type  UserPremiumType?
  premium_until DateTime?
}

enum LogType {
  MODACTION_BAN
  MODACTION_KICK
  MODACTION_MUTE
  MODACTION_ADV
  NOTIFYDM_BAN
  NOTIFYDM_KICK
  NOTIFYDM_MUTE
  NOTIFYDM_ADV
}

enum GuildPermissionType {
  MEMBER
  ROLE
  COMMAND
}

enum GuildPremiumType {
  BASIC
  PLUS
}

enum PunishmentType {
  BAN
  MUTE
  KICK
  ADV
}

enum UserPremiumType {
  PLUS
}