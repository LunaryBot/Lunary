generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Embed {
  guild_id String
  type     EmbedType
  content  String?
  embeds   Json[]    @default([])

  @@id([guild_id, type])
}

model Guild {
  id                  String             @id @unique
  modlogs_channel     String?
  punishments_channel String?
  features            BigInt?
  premium_type        GuildPremiumType?
  premium_until       DateTime?
  permissions         GuildPermissions[]
  reasons             Reason[]
}

model GuildPermissions {
  id          String
  type        GuildPermissionType
  guild_id    String
  permissions BigInt
  guild       Guild               @relation(fields: [guild_id], references: [id])

  @@id([guild_id, id])
}

model Punishment {
  id         Int            @id @unique @default(autoincrement())
  guild_id   String
  user_id    String
  author_id  String
  created_at DateTime
  flags      BigInt         @default(0)
  duration   Int?
  reason     String?
  deleted    Boolean?       @default(false)
  type       PunishmentType
  reason_id  Int?
}

model Reason {
  text     String
  guild_id String
  keys     String[]         @default([])
  duration Int?
  days     Int?
  types    PunishmentType[]
  id       Int              @id @unique @default(autoincrement())
  guild    Guild            @relation(fields: [guild_id], references: [id])
}

model User {
  id              String           @id @unique
  features        BigInt?
  luas            Int?
  xp              Int?
  last_daily_at   DateTime?
  premium_type    UserPremiumType?
  premium_until   DateTime?
  bio             String?
  flags           BigInt?
  inventary_using BigInt?
  inventory       BigInt?
}

enum EmbedType {
  BAN
  KICK
  MUTE
  ADV
  NOFITYDM
}

enum GuildPermissionType {
  MEMBER
  ROLE
  COMMAND
}

enum GuildPremiumType {
  BASIC
  PLUS
}

enum PunishmentType {
  BAN
  MUTE
  KICK
  ADV
}

enum UserPremiumType {
  PLUS
}
