// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Guild {
  id                  String              @id @unique
  modlogs_channel     String?
  punishments_channel String?
  features            BigInt?
  permissions         GuildPermissions[]
  reasons             Reason[]
  premium_type        GuildPremiumType?
  premium_until       DateTime?
  embeds              Json[]              @default([])

  @@map("GUILDS")
}

model GuildPermissions {
  id          String                @id @unique
  type        GuildPermissionType
  guild_id    String
  permissions BigInt

  guild       Guild?                @relation(fields: [guild_id], references: [id])

  @@map("GUILD_PERMISSIONS")
}

enum GuildPermissionType {
  ROLE
  MEMBER
}

enum GuildPremiumType {
  BASIC
  PLUS
}

model Punishment {
  id         Int            @id @unique @default(autoincrement())
  guild_id   String
  user_id    String
  author_id  String
  type       PunishmentType
  created_at DateTime
  flags      BigInt            @default(0)
  duration   Int?
  reason     String?
  reason_id  String?
  deleted    Boolean?       @default(false)

  @@map("PUNISHMENTS")
}

enum PunishmentType {
  BAN
  MUTE
  KICK
  ADV
}

model Reason {
  id       String   @id @unique @default(cuid())
  text     String
  guild_id String
  type     PunishmentType[]
  keys     String[] @default([])
  duration Int?
  days     Int?

  guild    Guild?   @relation(fields: [guild_id], references: [id])

  @@map("REASONS")
}

model User {
  id                         String           @id @unique
  aboutme                    String?
  features                   BigInt?
  luas                       Int?
  xp                         Int?
  last_punishment_applied_id String?
  last_daily_at              DateTime?
  premium_type               UserPremiumType?
  premium_until              DateTime?

  @@map("USERS")
}

enum UserPremiumType {
  PLUS
}